env:
  DEVELOPMENT: 'dev'
  PRODUCTION: 'prod'

configs:
  stage:
    - &dev-agent
      agents:
        queue: jora-apex-employer-dev:cicd-vcurrent
    - &prod-agent
      agents:
        queue: jora-apex-employer-prod:cicd-vcurrent
    # SEEK communal build agent
    - &build-agent
      agents:
        queue: buildarm
  plugins:
    - &docker-ecr-cache-plugin
      seek-oss/docker-ecr-cache#v2.1.0:
        cache-on:
          - package.json
          - yarn.lock
          - Dockerfile
        secrets: id=npm,src=.npmrc
    - &docker
      docker#v5.9.0:
        workdir: /workdir
        volumes:
          - /workdir/node_modules
        propagate-environment: true
    - &aws-sm-plugin-env
      seek-oss/aws-sm#v2.3.1:
        env:
          DATADOG_API_KEY: 'jora/apex/datadog-api-key'
    - &aws-sm-plugin-npm
      seek-oss/aws-sm#v2.3.1:
        env:
          NPM_READ_TOKEN: arn:aws:secretsmanager:ap-southeast-2:987872074697:secret:npm/npm-read-token
    - &private-npm
      seek-oss/private-npm#v1.2.0:
        env: NPM_READ_TOKEN
  base-steps:
    - &test-base
      <<: *build-agent
      plugins:
        - *aws-sm-plugin-npm
        - *private-npm
        - *docker-ecr-cache-plugin
        - *docker
    - &deploy-base
      concurrency: 1
      retry:
        manual:
          # Only use this if you need to roll back a deployment ASAP.
          # Always follow up with a proper revert or fix in Git history.
          permit_on_passed: true
      plugins:
        - *aws-sm-plugin-env
        - *aws-sm-plugin-npm
        - *private-npm
        - *docker-ecr-cache-plugin
        - *docker

should-not-skip-tests: &should-not-skip-tests
  if: build.branch == 'master' || build.message !~ /\[skip tests\]/i

steps:
  - label: ':eslint: Lint'
    <<: [*test-base, *should-not-skip-tests]
    command:
      - yarn lint

  - label: ':test_tube: Test'
    <<: [*test-base, *should-not-skip-tests]
    command:
      - yarn test

  - wait
  - block: 'Deploy to Dev'
    branches: '!master'

  - label: ':rocket: Deploy | Development'
    <<: [*deploy-base, *dev-agent]
    concurrency_group: dev
    command:
      - yarn deploy:serverless --stage ${DEVELOPMENT?}

  - wait
  - label: ':rocket: Deploy | Production'
    <<: [*deploy-base, *prod-agent]
    concurrency_group: prod
    branches: 'master'
    command:
      - yarn deploy:serverless --stage ${PRODUCTION?}
